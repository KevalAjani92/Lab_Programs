USE CSE_4A_221;

-- Create Department Table 
CREATE TABLE DEPARTMENT
(
    DEPARTMENTID INT PRIMARY KEY,
    DEPARTMENTNAME VARCHAR(100) NOT NULL UNIQUE
);
-- Create Designation Table 
CREATE TABLE DESIGNATION
(
    DESIGNATIONID INT PRIMARY KEY,
    DESIGNATIONNAME VARCHAR(100) NOT NULL UNIQUE
);
-- Create Person Table 
CREATE TABLE PERSON
(
    PERSONID INT PRIMARY KEY IDENTITY(101,1),
    FIRSTNAME VARCHAR(100) NOT NULL,
    LASTNAME VARCHAR(100) NOT NULL,
    SALARY DECIMAL(8, 2) NOT NULL,
    JOININGDATE DATETIME NOT NULL,
    DEPARTMENTID INT NULL,
    DESIGNATIONID INT NULL,
    FOREIGN KEY (DEPARTMENTID) REFERENCES Department(DEPARTMENTID),
    FOREIGN KEY (DESIGNATIONID) REFERENCES Designation(DESIGNATIONID)
);

------------- PART - A ----------------

-- 1. Department, Designation & Person Table’s INSERT, UPDATE & DELETE Procedures. 

-- INSERT_PR

CREATE OR ALTER PROCEDURE PR_DEPARTMENT_INSERT
    @DEPTID INT,
    @DEPTNAME VARCHAR(100)
AS
BEGIN
    INSERT INTO DEPARTMENT
    VALUES
        (@DEPTID, @DEPTNAME)
END

EXEC PR_DEPARTMENT_INSERT 1,'ADMIN';
EXEC PR_DEPARTMENT_INSERT 2,'IT';
EXEC PR_DEPARTMENT_INSERT 3,'HR';
EXEC PR_DEPARTMENT_INSERT 4,'ACCOUNT';


SELECT *
FROM DEPARTMENT;


CREATE OR ALTER PROCEDURE PR_DESIGNATION_INSERT
    @DESIID INT,
    @DESINAME VARCHAR(100)
AS
BEGIN
    INSERT INTO DESIGNATION
    VALUES
        (@DESIID, @DESINAME)
END

EXEC PR_DESIGNATION_INSERT 11,'JOBBER';
EXEC PR_DESIGNATION_INSERT 12,'WELDER';
EXEC PR_DESIGNATION_INSERT 13,'CLERK';
EXEC PR_DESIGNATION_INSERT 14,'MANAGER';
EXEC PR_DESIGNATION_INSERT 15,'CEO';

SELECT *
FROM DESIGNATION;

CREATE OR ALTER PROCEDURE PR_PERSON_INSERT
    @FNAME VARCHAR(100),
    @LNAME VARCHAR(100),
    @SALARY DECIMAL(8,2),
    @JOINDATE DATETIME,
    @DEPTID INT,
    @DESIID INT
AS
BEGIN
    INSERT INTO PERSON
    VALUES
        (@FNAME, @LNAME, @SALARY, @JOINDATE, @DEPTID, @DESIID)
END

EXEC PR_PERSON_INSERT 'RAHUL','ANSHU',56000,'1990-01-01',1,12;
EXEC PR_PERSON_INSERT 'HARDIK','HINSU',18000,'1990-09-25',2,11;
EXEC PR_PERSON_INSERT 'BHAVIN','KAMANI',25000,'1991-05-14',NULL,11;
EXEC PR_PERSON_INSERT 'BHOOMI','PATEL',39000,'2014-02-20',1,13;
EXEC PR_PERSON_INSERT 'ROHIT','RAJGOR',17000,'1990-07-23',2,15;
EXEC PR_PERSON_INSERT 'PRIYA','MEHTA',25000,'1990-10-18',2,NULL;
EXEC PR_PERSON_INSERT 'NEHA','TRIVEDI',18000,'2014-02-20',3,15;

SELECT *
FROM PERSON;

-- UPDATE_PR

CREATE OR ALTER PROCEDURE PR_UPDATE_DEPARTMENT
    @DEPTID INT,
    @DEPTNAME VARCHAR(100)
AS
BEGIN
    UPDATE DEPARTMENT
    SET DEPARTMENTID = @DEPTID,DEPARTMENTNAME = @DEPTNAME
    WHERE DEPARTMENTID = @DEPTID
END


CREATE OR ALTER PROCEDURE PR_UPDATE_DESIGNATION
    @DESIID INT,
    @DESINAME VARCHAR(100)
AS
BEGIN
    UPDATE DESIGNATION
    SET DESIGNATIONID = @DESIID,DESIGNATIONNAME = @DESINAME
    WHERE DESIGNATIONID = @DESIID
END


CREATE OR ALTER PROCEDURE PR_UPDATE_PERSON
    @PERSONID INT,
    @FNAME VARCHAR(100),
    @LNAME VARCHAR(100),
    @SALARY DECIMAL(8,2),
    @JOINDATE DATETIME,
    @DEPTID INT,
    @DESIID INT
AS
BEGIN
    UPDATE PERSON
    SET FIRSTNAME = @FNAME,LASTNAME = @LNAME,SALARY = @SALARY,JOININGDATE = @JOINDATE,DEPARTMENTID = @DEPTID,DESIGNATIONID = @DESIID
    WHERE PERSONID = @PERSONID
END

--DELETE_PR

CREATE OR ALTER PROCEDURE PR_DEPARTMENT_DELETE
    @DEPTID INT
AS
BEGIN
    DELETE FROM DEPARTMENT
    WHERE DEPARTMENTID = @DEPTID
END

CREATE OR ALTER PROCEDURE PR_DESIGNATION_DELETE
    @DESIID INT
AS
BEGIN
    DELETE FROM DESIGNATION
    WHERE DESIGNATIONID = @DESIID
END

CREATE OR ALTER PROCEDURE PR_PERSON_DELETE
    @PERSONID INT
AS
BEGIN
    DELETE FROM PERSON
    WHERE PERSONID = @PERSONID
END

-- 2. Department, Designation & Person Table’s SELECTBYPRIMARYKEY 

--PR_SELCTBYPRIMARYKEY

CREATE OR ALTER PROCEDURE PR_DEPARTMENT_SELCTBYPRIMARYKEY
    @DEPTID INT
AS
BEGIN
    SELECT *
    FROM DEPARTMENT
    WHERE DEPARTMENTID = @DEPTID
END

EXEC PR_DEPARTMENT_SELCTBYPRIMARYKEY 2;

CREATE OR ALTER PROCEDURE PR_DESIGNATION_SELCTBYPRIMARYKEY
    @DESIID INT
AS
BEGIN
    SELECT *
    FROM DESIGNATION
    WHERE DESIGNATIONID = @DESIID
END

EXEC PR_DESIGNATION_SELCTBYPRIMARYKEY 12;

CREATE OR ALTER PROCEDURE PR_PERSON_SELCTBYPRIMARYKEY
    @PERID INT
AS
BEGIN
    SELECT *
    FROM PERSON
    WHERE PERSONID = @PERID
END

EXEC PR_PERSON_SELCTBYPRIMARYKEY 102;

-- 3. Department, Designation & Person Table’s (If foreign key is available then do write join and take columns on select list) 

-- PR_SELECT

CREATE OR ALTER PROCEDURE PR_DEPARTMENT_SELECT
AS
BEGIN
    SELECT *
    FROM DEPARTMENT
END

EXEC PR_DEPARTMENT_SELECT;

CREATE OR ALTER PROCEDURE PR_DESIGNATION_SELECT
AS
BEGIN
    SELECT *
    FROM DESIGNATION
END

EXEC PR_DESIGNATION_SELECT;

CREATE OR ALTER PROCEDURE PR_PERSON_SELECT
AS
BEGIN
    SELECT P.PERSONID, P.FIRSTNAME, P.LASTNAME, P.SALARY, P.JOININGDATE, D.DEPARTMENTNAME, DE.DESIGNATIONNAME
    FROM PERSON P
        LEFT JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
        LEFT JOIN DESIGNATION DE ON P.DESIGNATIONID = DE.DESIGNATIONID
END

EXEC PR_PERSON_SELECT;

-- 4. Create a Procedure that shows details of the first 3 persons.


CREATE OR ALTER PROCEDURE PR_PERSON_SELECTTOP3
AS
BEGIN
    SELECT TOP 3
        *
    FROM PERSON;
END

EXEC PR_PERSON_SELECTTOP3;


------------- PART - B ----------------

-- 5. Create a Procedure that takes the department name as input and returns a table with all workers working in that department. 

CREATE OR ALTER PROCEDURE PR_DEPT_WORKERS
    @DEPTNAME VARCHAR(100)
AS
BEGIN
    SELECT P.FIRSTNAME+' '+P.LASTNAME AS WORKER_NAME, D.DEPARTMENTNAME
    FROM PERSON P
        JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
    WHERE D.DEPARTMENTNAME = @DEPTNAME
END

EXEC PR_DEPT_WORKERS 'ADMIN';

-- 6. Create Procedure that takes department name & designation name as input and returns a table with 
-- worker’s first name, salary, joining date & department name. 

CREATE OR ALTER PROCEDURE PR_DEPT_DESI_WORKERS
    @DEPTNAME VARCHAR(100),
    @DESINAME VARCHAR(100)
AS
BEGIN
    SELECT P.FIRSTNAME, P.SALARY, P.JOININGDATE, D.DEPARTMENTNAME
    FROM PERSON P
        JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
        JOIN DESIGNATION DE ON P.DESIGNATIONID = DE.DESIGNATIONID
    WHERE D.DEPARTMENTNAME = @DEPTNAME AND DE.DESIGNATIONNAME = @DESINAME
END

EXEC PR_DEPT_DESI_WORKERS 'IT','JOBBER';

-- 7. Create a Procedure that takes the first name as an input parameter and display all the details of the worker with their department & designation name. 

CREATE OR ALTER PROCEDURE PR_WORKER_BY_FNAME
    @FNAME VARCHAR(100)
AS
BEGIN
    SELECT P.PERSONID, P.FIRSTNAME, P.LASTNAME, P.SALARY, P.JOININGDATE, D.DEPARTMENTNAME, DE.DESIGNATIONNAME
    FROM PERSON P
        LEFT JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
        LEFT JOIN DESIGNATION DE ON P.DESIGNATIONID = DE.DESIGNATIONID
    WHERE P.FIRSTNAME = @FNAME
END

EXEC PR_WORKER_BY_FNAME 'BHOOMI';

-- 8. Create Procedure which displays department wise maximum, minimum & total salaries. 

CREATE OR ALTER PROCEDURE PR_DEPT_MAXMINAVG_SAL
AS
BEGIN
    SELECT D.DEPARTMENTNAME, MAX(P.SALARY) AS MAX_SALARY, MIN(P.SALARY) AS MIN_SALARY, AVG(P.SALARY) AS AVG_SALARY
    FROM PERSON P
        JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
    GROUP BY D.DEPARTMENTNAME
END

EXEC PR_DEPT_MAXMINAVG_SAL;

-- 9. Create Procedure which displays designation wise average & total salaries. 

CREATE OR ALTER PROCEDURE PR_DESIG_AVGTOTAL_SAL
AS
BEGIN
    SELECT D.DESIGNATIONNAME, SUM(P.SALARY) AS TOTAL_SAL, AVG(P.SALARY) AS AVG_SALARY
    FROM PERSON P
        JOIN DESIGNATION D ON P.DESIGNATIONID = D.DESIGNATIONID
    GROUP BY D.DESIGNATIONNAME
END

EXEC PR_DESIG_AVGTOTAL_SAL;

------------- PART - C ----------------

-- 10. Create Procedure that Accepts Department Name and Returns Person Count. 

CREATE OR ALTER PROCEDURE PR_DEPTWISE_PERSONCOUNT
    @DEPTNAME VARCHAR(100)
AS
BEGIN
    SELECT COUNT(*) AS WORKER_COUNT
    FROM PERSON
    WHERE DEPARTMENTID = (SELECT DEPARTMENTID
    FROM DEPARTMENT
    WHERE DEPARTMENTNAME = @DEPTNAME)
END

EXEC PR_DEPTWISE_PERSONCOUNT 'IT';

-- 11. Create a procedure that takes a salary value as input and returns all workers with a salary greater than input salary value along with their department and designation details. 

CREATE OR ALTER PROCEDURE PR_SALARY_GREATER
    @SALARY INT
AS
BEGIN
    SELECT P.FIRSTNAME+' '+P.LASTNAME AS WORKER_NAME, P.SALARY, D.DEPARTMENTNAME, DE.DESIGNATIONNAME
    FROM PERSON P
        LEFT JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
        LEFT JOIN DESIGNATION DE ON P.DESIGNATIONID = DE.DESIGNATIONID
    WHERE P.PERSONID IN (SELECT PERSONID
    FROM PERSON
    WHERE SALARY > @SALARY)
END

EXEC PR_SALARY_GREATER 17000;

-- 12. Create a procedure to find the department(s) with the highest total salary among all departments.

CREATE OR ALTER PROCEDURE PR_DEPARTMENT_MAXTOTAL_SALARY
AS
BEGIN
    SELECT TOP 1
        D.DEPARTMENTNAME, SUM(P.SALARY) AS MAX_TOTAL_SALARY
    FROM PERSON P
        JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
    GROUP BY D.DEPARTMENTNAME
    ORDER BY MAX_TOTAL_SALARY DESC
END

EXEC PR_DEPARTMENT_MAXTOTAL_SALARY;

-- 13. Create a procedure that takes a designation name as input and returns a list of all workers under that designation who joined within the last 10 years, along with their department. 

CREATE OR ALTER PROCEDURE PR_WORKER10YEAR
    @DESINAME VARCHAR(100)
AS
BEGIN
    SELECT P.FIRSTNAME, DE.DESIGNATIONNAME, P.JOININGDATE, D.DEPARTMENTNAME
    FROM PERSON P
        LEFT JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
        JOIN DESIGNATION DE ON P.DESIGNATIONID = DE.DESIGNATIONID
    WHERE DE.DESIGNATIONNAME = @DESINAME AND P.JOININGDATE >= DATEADD(YEAR,-10,GETDATE())
END

EXEC PR_WORKER10YEAR 'CEO';


-- 14. Create a procedure to list the number of workers in each department who do not have a designation assigned.

CREATE OR ALTER PROCEDURE PR_DESINULL
AS
BEGIN
    SELECT D.DEPARTMENTNAME, COUNT(P.PERSONID)
    FROM PERSON P
        LEFT JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
        LEFT JOIN DESIGNATION DE ON P.DESIGNATIONID = DE.DESIGNATIONID
    WHERE P.DESIGNATIONID IS NULL
    GROUP BY D.DEPARTMENTNAME
END    

EXEC PR_DESINULL;

-- -- 15. Create a procedure to retrieve the details of workers in departments where the average salary is above 12000.
 
CREATE OR ALTER PROCEDURE PR_DEPT_AVGSAL12000
AS
BEGIN 
    SELECT D.DEPARTMENTNAME,AVG(P.SALARY) AS AVG_SALARY FROM PERSON P 
    JOIN DEPARTMENT D ON P.DEPARTMENTID = D.DEPARTMENTID
    GROUP BY D.DEPARTMENTNAME
    HAVING AVG(P.SALARY)>12000
END

EXEC PR_DEPT_AVGSAL12000;